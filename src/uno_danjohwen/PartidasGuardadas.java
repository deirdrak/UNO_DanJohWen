/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PartidasGuardadas.java
 *
 * Created on 12-06-2011, 01:27:00 AM
 */
package uno_danjohwen;

import java.io.File;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Wendy
 */
public class PartidasGuardadas extends javax.swing.JFrame {
    File partidas= new File("Partidas");      

    /** Creates new form PartidasGuardadas */
    public PartidasGuardadas() {
        initComponents();
        if(partidas.isDirectory()){
            File archivos[]=partidas.listFiles();
            DefaultListModel modelo = new DefaultListModel();  
            
            for(File arch:archivos){
                if(!arch.getName().equalsIgnoreCase("CodigoPartidas.uno"))                    
                    modelo.addElement(arch.getName());
            }
            
            ListaPartidas.setModel(modelo);            
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ListaPartidas = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        ListaPartidas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaPartidas.setName("ListaPartidas"); // NOI18N
        jScrollPane1.setViewportView(ListaPartidas);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(uno_danjohwen.UNO_DanJohWenApp.class).getContext().getResourceMap(PartidasGuardadas.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
    
    //Boton de atr√°s
    MenuPartidas MP=new MenuPartidas();
    MP.setVisible(true);
    this.dispose();
}//GEN-LAST:event_jButton2MouseClicked

private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
   
    //Boton de Reanudar
    String archivo=ListaPartidas.getSelectedValue().toString();
        try {
            RandomAccessFile partida= new RandomAccessFile("Partidas\\"+archivo,"rw");
            
            ArrayList<Cartas> CartasJ1= new ArrayList(),CartasJ2= new ArrayList(),CartasCentro= new ArrayList();
            String CartaCentro;

            int codJ1=partida.readInt();
            int puntosJ1=partida.readInt();
            int cantCartasJ1=partida.readInt();

            for(int i=0;i<cantCartasJ1;i++){
                String carta=partida.readUTF();
                String color=carta.substring(0, carta.length()-1);
                int NumColor=0;
                
                if(color.equalsIgnoreCase("Amarillo"))
                      NumColor=0;
                else if(color.equalsIgnoreCase("Azul"))
                      NumColor=1;
                else if(color.equalsIgnoreCase("Rojo"))
                      NumColor=2;
                else if(color.equalsIgnoreCase("Verde"))
                      NumColor=3;
                else
                      NumColor=4;
                
                try{
                      int NumCarta=Integer.valueOf(carta.substring(carta.length()-1,carta.length()));                      
                      CartasJ1.add(new CartasNumericas(NumColor,NumCarta));                     
                }
                catch(Exception ex){
                      char centerCardTipo=carta.charAt(carta.length()-1);
                      int tipo=0;
                      switch(centerCardTipo){
                          case 'T':
                              tipo=0;                       
                              break;
                          case 'R':
                              tipo=1;
                              break;
                          case 'S':
                              tipo=2;
                              break;
                          case 'C':
                              tipo=3;
                              break;
                          case 'M':
                              tipo=4;
                              break;
                      }
                      CartasJ1.add(new CartasEspeciales(NumColor,tipo));
                }
            }

            int codJ2=partida.readInt();
            int puntosJ2=partida.readInt();
            int cantCartasJ2=partida.readInt();

            for(int i=0;i<cantCartasJ2;i++){
                String carta=partida.readUTF();
                String color=carta.substring(0, carta.length()-1);
                int NumColor=0;
                
                if(color.equalsIgnoreCase("Amarillo"))
                      NumColor=0;
                else if(color.equalsIgnoreCase("Azul"))
                      NumColor=1;
                else if(color.equalsIgnoreCase("Rojo"))
                      NumColor=2;
                else if(color.equalsIgnoreCase("Verde"))
                      NumColor=3;
                else
                      NumColor=4;
                
                try{
                      int NumCarta=Integer.valueOf(carta.substring(carta.length()-1,carta.length()));                      
                      CartasJ2.add(new CartasNumericas(NumColor,NumCarta));                     
                }
                catch(Exception ex){
                      char centerCardTipo=carta.charAt(carta.length()-1);
                      int tipo=0;
                      switch(centerCardTipo){
                          case 'T':
                              tipo=0;                       
                              break;
                          case 'R':
                              tipo=1;
                              break;
                          case 'S':
                              tipo=2;
                              break;
                          case 'C':
                              tipo=3;
                              break;
                          case 'M':
                              tipo=4;
                              break;
                      }
                      CartasJ2.add(new CartasEspeciales(NumColor,tipo));
                }
            }

            CartaCentro=partida.readUTF();

            int cantCartasCentro=partida.readInt();

            for(int i=0;i<cantCartasCentro;i++){
                String carta=partida.readUTF();
                String color=carta.substring(0, carta.length()-1);
                int NumColor=0;
                
                if(color.equalsIgnoreCase("Amarillo"))
                      NumColor=0;
                else if(color.equalsIgnoreCase("Azul"))
                      NumColor=1;
                else if(color.equalsIgnoreCase("Rojo"))
                      NumColor=2;
                else if(color.equalsIgnoreCase("Verde"))
                      NumColor=3;
                else
                      NumColor=4;
                
                try{
                      int NumCarta=Integer.valueOf(carta.substring(carta.length()-1,carta.length()));                      
                      CartasCentro.add(new CartasNumericas(NumColor,NumCarta));                     
                }
                catch(Exception ex){
                      char centerCardTipo=carta.charAt(carta.length()-1);
                      int tipo=0;
                      switch(centerCardTipo){
                          case 'T':
                              tipo=0;                       
                              break;
                          case 'S':
                              tipo=1;
                              break;
                          case 'R':
                              tipo=2;
                              break;
                          case 'C':
                              tipo=3;
                              break;
                          case 'M':
                              tipo=4;
                              break;
                      }
                      CartasCentro.add(new CartasEspeciales(NumColor,tipo));
                }
            }
            
            int turno=partida.readInt();
            
            PantallaJuego PJ= new PantallaJuego( CartasJ1, CartasJ2, CartasCentro, CartaCentro,turno,puntosJ1,puntosJ2);
            PJ.setVisible(true);
            this.dispose();
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"ERROR: "+ ex);
        }
}//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartidasGuardadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartidasGuardadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartidasGuardadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartidasGuardadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PartidasGuardadas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListaPartidas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
